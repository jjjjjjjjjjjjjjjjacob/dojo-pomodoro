# dojo-pomodoro Learnings

## SMS Opt-In Enhancements
- Additive UI controls should reuse existing shadcn primitives (`Checkbox`, `Button`) to preserve styling consistency and haptic feedback triggers.
- Convex query payload updates require updating all downstream consumers; favor optional chaining and explicit defaulting (e.g., falsy `smsConsent` -> `false`).
- When enabling inline preference toggles, guard the mutation button with explicit loading state tied to the mutation promise instead of assuming automatic query revalidation.

### Helpful When
- Implementing additional RSVP form fields or consent toggles.
- Surfacing new RSVP metadata on status or profile pages.
- Adding inline preference mutations that should remain responsive without full query refetch.

## Bun 1.3 Testing Stabilization
- Use `bunfig.toml` `preload` entries (`happydom.ts`, `test-setup.ts`) to guarantee DOM globals and shared mocks load before suites.
- Prefer shared `renderWithProviders` helper so client components automatically receive `EventBrandingProvider`, query clients, and haptic context.
- Extend `test-setup.ts` `next/navigation` mock to include all hooks (`usePathname`, etc.) consumed by client components to avoid SyntaxError imports.
- Mock Clerk `useUser` to expose `organizationMemberships` to satisfy host/door role logic inside header navigation.
- Bunâ€™s test runner respects `mock.module`; define these inside preload file to avoid per-suite duplication.

### Helpful When
- Authoring new client component tests that rely on shared providers or navigation hooks.
- Debugging Bun-specific module resolution or DOM availability issues during unit tests.